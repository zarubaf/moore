initSidebarItems({"enum":[["EventKind","An enum identifying the various kinds of events that can occur."]],"macro":[["database_storage","This macro generates the \"query storage\" that goes into your database. It requires you to list all of the query groups that you need as well as the queries within those groups. The format looks like so:"],["query_group","A macro that helps in defining the \"context trait\" of a given module.  This is a trait that defines everything that a block of queries need to execute, as well as defining the queries themselves that are exported for others to use."]],"mod":[["debug","Debugging APIs: these are meant for use when unit-testing or debugging your application but aren't ordinarily needed."]],"struct":[["Event","The `Event` struct identifies various notable things that can occur during salsa execution. Instances of this struct are given to `salsa_event`."],["QueryTable","Return value from [the `query` method] on `Database`. Gives access to various less common operations on queries."],["QueryTableMut","Return value from [the `query_mut` method] on `Database`. Gives access to the `set` method, notably, that is used to set the value of an input query."],["Runtime","The salsa runtime stores the storage for all queries as well as tracking the query stack and dependencies between cycles."],["RuntimeId","A unique identifier for a particular runtime. Each time you create a snapshot, a fresh `RuntimeId` is generated. Once a snapshot is complete, its `RuntimeId` may potentially be re-used."],["Snapshot","Simple wrapper struct that takes ownership of a database `DB` and only gives `&self` access to it. See [the `snapshot` method][fm] for more details."],["SweepStrategy","The sweep strategy controls what data we will keep/discard when we do a GC-sweep. The default (`SweepStrategy::default`) is to keep all memoized values used in the current revision."]],"trait":[["Database","The base trait which your \"query context\" must implement. Gives access to the salsa runtime, which you must embed into your query context (along with whatever other state you may require)."],["ParallelDatabase","Indicates a database that also supports parallel query evaluation. All of Salsa's base query support is capable of parallel execution, but for it to work, your query key/value types must also be `Send`, as must any additional data in your database."],["Query","Trait implements by all of the \"special types\" associated with each of your queries."]]});